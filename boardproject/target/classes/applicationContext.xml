<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<!-- IoC -->
	<context:component-scan base-package="com.test.app"/>

	<!-- <bean id="memberService" class="com.test.app.member.impl.MemberServiceImpl">
		<property name="memberDAO" ref="memberDAO"/>
	</bean> -->

	<!-- <bean id="memberDAO" class="com.test.app.member.impl.MemberDAO"/> -->

	<!-- Aop -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- <bean id="aa" class="com.test.app.common.AfterAdvice" />
	<bean id="ara" class="com.test.app.common.AfterReturningAdvice"/>
	<bean id="ata" class="com.test.app.common.AfterThrowingAdvice"/>
	<bean id="aa2" class="com.test.app.common.AroundAdvice"/>
	<bean id="la" class="com.test.app.common.LogAdvice" />
	<bean id="la2" class="com.test.app.common.LogAdvice2" />
	
	<aop:config>
		<aop:pointcut expression="execution(* com.test.app..*Impl.*(..))" id="aPointcut"/>
		<aop:pointcut expression="execution(* com.test.app..*Impl.select*(..))" id="bPointcut"/>
		
		<aop:aspect ref="aa2">
			<aop:around pointcut-ref="bPointcut" method="aroundLog"/>
		</aop:aspect>
	</aop:config> -->


	<!-- DataSource 객체 설정  close : 메모리해제-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
    	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
    	<property name="username" value="kim" />
    	<property name="password" value="1234" />
   	</bean>

	<!-- 2 - JdbcTemplate 클래스 <bean> 등록하여 DI  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 트랜잭션관련설정 -->
   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
   </bean>
   
   <!-- 어떤 메서드와 결합하는지  -->
   <tx:advice id="txAdvice" transaction-manager="txManager">
   		<tx:attributes>
   			<tx:method name="select*" read-only="true"/>
   			<tx:method name="*"/>
   		</tx:attributes>
   </tx:advice>
   
   <!-- 범위설정 aspect는 메서드명을 알아야사용가능하므로  advisor를 사용한다 -->
   <aop:config>
   		<aop:pointcut expression="execution(* com.test.app..*Impl.*(..))" id="cPointcut"/>
   		<aop:advisor advice-ref="txAdvice" pointcut-ref="cPointcut"/>
   </aop:config>
   
   
   <!-- mybatis 설정 -->
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="configLocation" value="classpath:sql-map-config.xml" />
   </bean>
   <bean class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="sqlSession" />
   </bean>
</beans>